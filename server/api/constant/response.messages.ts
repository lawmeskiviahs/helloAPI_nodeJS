export const MESSAGES = {
  /**
   * message for catch block
   */
  CATCHMESSAGE: {
    ERROR: 'Something went wrong',
    NOT_FOUND: 'No Data Found',
  },
  // KKV Messages
  ADMIN: {
    SUCCESS: 'successfully logged in.',
    ERROR: 'Failed to login.',
    ALREADY_EXISTS: 'User already exists',
    DELETED: 'User deleted successfully.',
    NOT_FOUND: 'User not found',
    NOT_ADMIN: 'You are not ADMIN',
    EDIT: 'Only admin can access this',
    REGISTER: 'Register successfully',
    ROLE: 'New role created successfully',
    ROLE_EXITS: 'This role type is already exists',
    EMAIL_EXITS: 'This email is already exists.',
    WRONG_ROLE_TYPE: 'Your typing the wrong role type.',
    WALLET: 'Wallet Address Fetch Successfully',
    WALLET_CREATED: 'wallet created successfully',
    EXIST_WALLET: 'Wallet Already Exist !!',
  },
  COLLECTIONS: {
    SUCCESS: 'Collection created successfully.',
    ERROR: 'Unable to create collection, Please try again.',
    ALREADY_EXISTS: 'Collection title already exists',
    DELETED: 'Collection deleted successfully.',
    NOT_FOUND: 'Collection not found',
    FOUND: 'Collection found',
    UPDATE_SUCCESS: 'Collection Succesfully Updated',
  },
  BANNER: {
    SUCCESS: 'Banner created successfully.',
    ERROR: 'Unable to create banner, Please try again.',
    ALREADY_EXISTS: 'Banner title already exists',
    DELETED: 'Banner deleted successfully.',
    NOT_FOUND: 'Banner not found',
    FOUND: 'Banner Found Successfully',
    UPDATE_SUCCESS: 'Banner update successfully.',
    GET: 'Benner found',
    FETURED_BANNER_NOT_FOUND: 'No fetured banner found',
  },
  HEALTH_CHECK: {
    SUCCESS: 'Admin service is working',
    ERROR: 'Admin service not working',
  },
  LIKES: {
    SUCCESS: 'Likes created successfully.',
    ERROR: 'Unable to create likes, Please try again.',
    ALREADY_EXISTS: 'likes title already exists',
    DELETED: 'likes deleted successfully.',
    NOT_FOUND: 'Likes not found',
  },
  JWT: {
    ERROR: 'Failed to authenticate user',
    GENERATE_ERROR: 'Failed to sign jwt token',
    USER_ID_ERROR: 'Invalid user id',
    SECRET_ERROR: 'JWT secret missing',
    EXPIRED: 'Session Expired',
    SUCCESS: 'Success',
  },
  NFTFEES: {
    TYPE_NOT_FOUND: 'This type of values Not match',
    FEES_REQUIRED: 'Fees must required for adding in NFT-Fees',
    FEES_NOT_SAVE: 'NFT Fees is not save...',
    SUCCESS: "NFT-Fee's create successfully",
    UPDATE: "NFT-Fee's update successfully",
    NOT_FOUND: "NFT-Fee's ID Not Found.",
    UPDATE_ERROR: 'Error in the updating NFTFees data',
    ERROR_LISTING: 'Error in the getting Data...',
    FOUND: 'Getting Listing of NFT-Fees ',
  },
  NFT: {
    SUCCESS: 'NFT created successfully.',
    ERROR: 'Unable to create NFT, Please try again.',
    ALREADY_EXISTS: 'NFT title already exists',
    DELETED: 'NFT deleted successfully.',
    NOT_FOUND: 'NFT not found',
    FOUND: 'NFT Found Successfully',
    AVAILABLE_OPTION:
      'This feature is not developed yet. Choose Other NFT Sale Type',
  },
  CATEGORY: {
    SUCCESS: 'Category created successfully.',
    ERROR: 'Unable to create category, Please try again.',
    ALREADY_EXISTS: 'Category title already exists',
    DELETED: 'Category deleted successfully.',
    NOT_FOUND: 'Category not found',
    FOUND: 'Category found',
    UPDATE_SUCCESS: 'Category Succesfully Updated',
  },
  PHOTOGRAPHER: {
    SUCCESS: 'Photographer created successfully.',
    ERROR: 'Unable to create cPhotographerategory, Please try again.',
    ALREADY_EXISTS: 'Photographer title already exists',
    DELETED: 'Photographer deleted successfully.',
    NOT_FOUND: 'Photographer not found',
    FOUND: 'Photographer found',
    UPDATE_SUCCESS: 'Photographer Succesfully Updated',
    REJECTED: 'Success',
  },
  USER: {
    SUCCESS: 'Photographer created successfully.',
    ERROR: 'Unable to create cPhotographerategory, Please try again.',
    ALREADY_EXISTS: 'Photographer title already exists',
    DELETED: 'Photographer deleted successfully.',
    NOT_FOUND: 'User not found',
    FOUND: 'User found',
    UPDATE_SUCCESS: 'User Succesfully Updated',
    COUNT: 'Success',
    success:
      'Confirmation Email has been sent to you. If not received in Inbox, please check the Spam Folder',
    failure: 'Something went wrong! Please try again later',
    PROFILE: {
      SUCCESS: 'User Profile fetched',
      FAILURE: 'Invalid User Requested',
    },
  },
  FEE: {
    SUCCESS: 'Fees created successfully.',
    GET: 'Fees get successfully',
    UPDATE_SUCCESS: 'Fees update successfully.',
  },
  ROYALTY: {
    SUCCESS: 'Royalty created successfully.',
    GET: 'Royalty get successfully',
    UPDATE_SUCCESS: 'Royalty update successfully.',
  },
};
